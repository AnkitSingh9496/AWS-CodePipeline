# node-aws-pipeline\buildspec.yml
version: 0.2

env:
  variables:
    ECR_REPOSITORY: circleci
    AWS_REGION: ap-south-1
    CLUSTER_NAME: CircleCI
    KUBE_DEPLOYMENT_NAME: nodejs-app-deployment
    KUBE_CONTAINER_NAME: nodejs-app-container
    K8S_MANIFEST_FILE: k8s-deployment.yaml

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - echo $AWS_DEFAULT_REGION
      - aws sts get-caller-identity
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin 244706281787.dkr.ecr.$AWS_REGION.amazonaws.com
      - REPOSITORY_URI=244706281787.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - echo "IMAGE_URI=$REPOSITORY_URI:$IMAGE_TAG"
      - echo "REPOSITORY_URI=$REPOSITORY_URI"
      - echo "IMAGE_TAG=$IMAGE_TAG"

  build:
    commands:
      - echo Building Docker image...
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG .
      - echo "Docker image built successfully"
      - docker images

  post_build:
    commands:
      - echo Pushing Docker image...
      - echo "Pushing $REPOSITORY_URI:$IMAGE_TAG"
      - |
        if docker push $REPOSITORY_URI:$IMAGE_TAG; then
          echo "✅ Docker image pushed successfully"
        else
          echo "❌ Docker push failed"
          echo "Checking ECR login status..."
          aws ecr describe-repositories --region $AWS_REGION --repository-names $ECR_REPOSITORY || echo "Repository might not exist"
          exit 1
        fi
      
      - echo Installing kubectl...
      - curl -o kubectl https://amazon-eks.s3.$AWS_REGION.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - mv ./kubectl /usr/local/bin/kubectl
      - kubectl version --client
      
      - echo Updating kubeconfig...
      - aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME
      
      - echo Applying Kubernetes manifests...
      - kubectl apply -f $K8S_MANIFEST_FILE
      
      - echo Updating deployment image...
      - kubectl set image deployment/$KUBE_DEPLOYMENT_NAME $KUBE_CONTAINER_NAME=$REPOSITORY_URI:$IMAGE_TAG
      
      - echo "✅ Deployment complete"
      - kubectl get deployments
      - kubectl get pods




















# version: 0.2

# env:
#   variables:
#     ECR_REPOSITORY: circleci
#     AWS_REGION: ap-south-1
#     CLUSTER_NAME: CircleCI
#     KUBE_DEPLOYMENT_NAME: nodejs-app-deployment
#     KUBE_CONTAINER_NAME: nodejs-app-container
#     K8S_MANIFEST_FILE: k8s-deployment.yaml

# phases:
#   pre_build:
#     commands:
#       - echo Logging in to Amazon ECR...
#       - aws --version
#       - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin 244706281787.dkr.ecr.$AWS_REGION.amazonaws.com
#       - REPOSITORY_URI=244706281787.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY
#       - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
#       - echo "IMAGE_URI=$REPOSITORY_URI:$IMAGE_TAG"

#   build:
#     commands:
#       - echo Building Docker image...
#       - docker build -t $REPOSITORY_URI:$IMAGE_TAG .

#   post_build:
#     commands:
#       - echo Pushing Docker image...
#       - docker push $REPOSITORY_URI:$IMAGE_TAG

#       - echo Installing kubectl...
#       - curl -o kubectl https://amazon-eks.s3.$AWS_REGION.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/kubectl
#       - chmod +x ./kubectl
#       - mv ./kubectl /usr/local/bin/kubectl

#       - echo Updating kubeconfig...
#       - aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME

#       - echo Applying Kubernetes manifests...
#       - kubectl apply -f $K8S_MANIFEST_FILE

#       - echo Updating deployment image...
#       - kubectl set image deployment/$KUBE_DEPLOYMENT_NAME $KUBE_CONTAINER_NAME=$REPOSITORY_URI:$IMAGE_TAG

#       - echo ✅ Deployment complete.














# version: 0.2

# env:
#   variables:
#     ECR_REPOSITORY: circleci
#     AWS_REGION: ap-south-1
#     CLUSTER_NAME: CircleCI
#     KUBE_DEPLOYMENT_NAME: nodejs-app-deployment
#     KUBE_CONTAINER_NAME: nodejs-app-container
#     K8S_MANIFEST_FILE: k8s-deployment.yaml 

# phases:
#   pre_build:
#     commands:
#       - echo Logging in to Amazon ECR...
#       - aws --version
#       - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin 244706281787.dkr.ecr.$AWS_REGION.amazonaws.com
#       - REPOSITORY_URI=244706281787.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY
#       - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
#   build:
#     commands:
#       - echo Building the Docker image...
#       - docker build -t $REPOSITORY_URI:$IMAGE_TAG .
#   post_build:
#     commands:
#       - echo Pushing the Docker image to ECR...
#       - docker push $REPOSITORY_URI:$IMAGE_TAG

#       - echo Installing kubectl...
#       - |
#         curl -o kubectl https://amazon-eks.s3.$AWS_REGION.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/kubectl
#         chmod +x ./kubectl
#         mv ./kubectl /usr/local/bin/kubectl

#       - echo Updating kubeconfig for EKS cluster...
#       - aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME

#       - echo Updating container image in deployment...
#       - kubectl set image deployment/$KUBE_DEPLOYMENT_NAME $KUBE_CONTAINER_NAME=$REPOSITORY_URI:$IMAGE_TAG

#       - echo Applying Kubernetes manifests...
#       - kubectl apply -f $K8S_MANIFEST_FILE

#       - echo Deployment to EKS complete.
# //////////////////////////////////////////////////////////////////////////////

# #node-aws-pipeline\buildspec.yml
# version: 0.2

# env:
#   variables:
#     ECR_REPOSITORY: circleci
#     AWS_REGION: ap-south-1
#     CLUSTER_NAME: CircleCI
#     KUBE_DEPLOYMENT_NAME: nodejs-app-deployment
#     KUBE_CONTAINER_NAME: nodejs-app-container

# phases:
#   pre_build:
#     commands:
#       - echo Logging in to Amazon ECR...
#       - aws --version
#       - $(aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin 244706281787.dkr.ecr.$AWS_REGION.amazonaws.com)
#       - REPOSITORY_URI=244706281787.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY
#       - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
#   build:
#     commands:
#       - echo Building the Docker image...
#       - docker build -t $REPOSITORY_URI:$IMAGE_TAG .
#   post_build:
#     commands:
#       - echo Pushing the Docker image...
#       - docker push $REPOSITORY_URI:$IMAGE_TAG
#       - echo Installing kubectl...
#       - |
#         curl -o kubectl https://amazon-eks.s3.$AWS_REGION.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/kubectl
#         chmod +x ./kubectl
#         mv ./kubectl /usr/local/bin/kubectl
#       - echo Updating kubeconfig...
#       - aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME
#       - echo Deploying to EKS by updating image...
#       - kubectl set image deployment/$KUBE_DEPLOYMENT_NAME $KUBE_CONTAINER_NAME=$REPOSITORY_URI:$IMAGE_TAG
